"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dataVis/page",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"674f499ac2bb\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJFOlxcV3BpXFxSZWd1bGFybHlcXENvdXJzZXNcXFNyXFwyMDI0X0NfVGVybVxcQ1M0MjQxXFxIV1xcZmluYWwtcHJvamVjdC1rZXJtaXQtdGhlLWZyb2dcXHNyY1xcYXBwXFxnbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjY3NGY0OTlhYzJiYlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/dataVis/SolveDen.js":
/*!*************************************!*\
  !*** ./src/app/dataVis/SolveDen.js ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SolveDensity)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst d3 = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_d3_src_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\"));\nfunction SolveDensity(param) {\n    let { solves } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [detail, setDetail] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(20); // Controls bandwidth\n    const [trim, setTrim] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0); // Controls x-axis range trim\n    const [densityData, setDensityData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SolveDensity.useEffect\": ()=>{\n            if (solves.length > 0) {\n                const times = solves.map({\n                    \"SolveDensity.useEffect.times\": (solve)=>solve.time / 1000\n                }[\"SolveDensity.useEffect.times\"]).sort({\n                    \"SolveDensity.useEffect.times\": (a, b)=>a - b\n                }[\"SolveDensity.useEffect.times\"]);\n                const bandwidth = (d3.max(times) - d3.min(times)) / detail * 1.2; // Slightly increased smoothing\n                const computedDensityData = kde(times, bandwidth);\n                setDensityData(computedDensityData);\n                drawSolveDensity(solves, computedDensityData);\n                window.addEventListener('resize', handleResize);\n            }\n            return ({\n                \"SolveDensity.useEffect\": ()=>window.removeEventListener('resize', handleResize)\n            })[\"SolveDensity.useEffect\"];\n        }\n    }[\"SolveDensity.useEffect\"], [\n        solves,\n        detail,\n        trim\n    ]);\n    function handleResize() {\n        if (containerRef.current) {\n            drawSolveDensity(solves);\n        }\n    }\n    function drawSolveDensity(data) {\n        if (!containerRef.current) return; // Ensure containerRef is available\n        const container = d3.select(containerRef.current);\n        container.selectAll('*').remove(); // Clear previous SVG\n        // Get dynamic width and height\n        const width = containerRef.current.clientWidth || 800;\n        const height = containerRef.current.clientHeight || 500;\n        const svg = container.append('svg').attr('width', '100%').attr('height', '100%').attr('viewBox', \"0 0 \".concat(width, \" \").concat(height)).attr('preserveAspectRatio', 'xMidYMid meet');\n        const times = data.map((solve)=>solve.time / 1000).sort((a, b)=>a - b);\n        const ao5 = computeRollingAverage(times, 5);\n        const ao12 = computeRollingAverage(times, 12);\n        const bandwidth = (d3.max(times) - d3.min(times)) / detail;\n        const densityData = kde(times, bandwidth);\n        const densityAo5 = kde(ao5.filter((d)=>d !== null), bandwidth);\n        const densityAo12 = kde(ao12.filter((d)=>d !== null), bandwidth);\n        const xDomain = d3.extent(densityData, (d)=>d[0]);\n        const maxTrim = xDomain[1] - xDomain[0] - 1;\n        const adjustedTrim = Math.min(trim, maxTrim);\n        const trimmedDomain = [\n            xDomain[0],\n            xDomain[1] - adjustedTrim\n        ];\n        const xScale = d3.scaleLinear().domain(trimmedDomain).range([\n            50,\n            width - 50\n        ]);\n        const yScale = d3.scaleLinear().domain([\n            0,\n            d3.max([\n                ...densityData,\n                ...densityAo5,\n                ...densityAo12\n            ], (d)=>d[1])\n        ]).range([\n            height - 50,\n            50\n        ]);\n        const area = d3.area().curve(d3.curveBasis) // Apply smoothing\n        .x((d)=>xScale(d[0])).y0(height - 50).y1((d)=>yScale(d[1]));\n        const line = d3.line().curve(d3.curveBasis) // Smooths the line\n        .x((d)=>xScale(d[0])).y((d)=>yScale(d[1]));\n        svg.append('path').datum(densityData).attr('d', area).attr('fill', 'steelblue').attr('opacity', 0.5);\n        svg.append('path').datum(densityData).attr('d', line).attr('stroke', 'blue').attr('fill', 'none').attr('stroke-width', 2);\n        svg.append('path').datum(densityAo5).attr('d', area).attr('fill', 'green').attr('opacity', 0.5);\n        svg.append('path').datum(densityAo5).attr('d', line).attr('stroke', 'green').attr('fill', 'none').attr('stroke-width', 2);\n        svg.append('path').datum(densityAo12).attr('d', area).attr('fill', 'red').attr('opacity', 0.5);\n        svg.append('path').datum(densityAo12).attr('d', line).attr('stroke', 'red').attr('fill', 'none').attr('stroke-width', 2);\n        svg.append('text').attr('x', width / 2).attr('y', 20).attr('text-anchor', 'middle');\n        // .text('Solve Time Density');\n        svg.append('g').attr('transform', \"translate(0, \".concat(height - 50, \")\")).call(d3.axisBottom(xScale));\n        // Compute percentiles\n        const computePercentiles = (data)=>[\n                0.25,\n                0.50,\n                0.75\n            ].map((p)=>{\n                const index = Math.floor(p * data.length);\n                return data[index];\n            });\n        const percentilesSingle = computePercentiles(times);\n        const percentilesAo5 = computePercentiles(ao5.filter((d)=>d !== null));\n        const percentilesAo12 = computePercentiles(ao12.filter((d)=>d !== null));\n        // Draw dashed lines for all density plots\n        const drawDashedLines = (percentiles, density, strokeColor)=>{\n            percentiles.forEach((value)=>{\n                var _density_find;\n                const yMax = yScale(((_density_find = density.find((d)=>d[0] >= value)) === null || _density_find === void 0 ? void 0 : _density_find[1]) || 0);\n                svg.append('line').attr('x1', xScale(value)).attr('x2', xScale(value)).attr('y1', height - 50).attr('y2', yMax).attr('stroke', strokeColor).attr('stroke-dasharray', '4,2');\n            });\n        };\n        drawDashedLines(percentilesSingle, densityData, 'blue');\n        drawDashedLines(percentilesAo5, densityAo5, 'green');\n        drawDashedLines(percentilesAo12, densityAo12, 'red');\n        // Add legend\n        const legend = svg.append('g').attr('transform', \"translate(\".concat(width - 120, \", 100)\"));\n        const legendItems = [\n            {\n                color: 'blue',\n                label: 'Single'\n            },\n            {\n                color: 'green',\n                label: 'AO5'\n            },\n            {\n                color: 'red',\n                label: 'AO12'\n            }\n        ];\n        legendItems.forEach((item, i)=>{\n            legend.append('rect').attr('x', 0).attr('y', i * 20).attr('width', 15).attr('height', 15).attr('fill', item.color).attr('opacity', 0.5);\n            legend.append('text').attr('x', 20).attr('y', i * 20 + 12).attr('fill', 'black').attr('font-size', '12px').text(item.label);\n        });\n    }\n    function computeRollingAverage(data, windowSize) {\n        return data.map((_, i, arr)=>{\n            if (i < windowSize - 1) return null;\n            const subset = arr.slice(i - windowSize + 1, i + 1);\n            return subset.reduce((sum, val)=>sum + val, 0) / subset.length;\n        });\n    }\n    function kde(data, bandwidth) {\n        const kernel = (u)=>Math.exp(-0.5 * u * u) / Math.sqrt(2 * Math.PI);\n        const kernelDensityEstimator = (kernel, bandwidth, data)=>{\n            const xMin = d3.min(data) - bandwidth * 3;\n            const xMax = d3.max(data) + bandwidth * 3;\n            const xValues = d3.range(xMin, xMax, (xMax - xMin) / 300); // Increased points\n            return xValues.map((x)=>{\n                return [\n                    x,\n                    d3.mean(data, (v)=>kernel((x - v) / bandwidth)) / bandwidth\n                ];\n            });\n        };\n        return kernelDensityEstimator(kernel, bandwidth, data);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-screen h-[calc(100vh-100px)] bg-white relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: containerRef,\n                className: \"w-full h-full\"\n            }, void 0, false, {\n                fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                lineNumber: 169,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-2 right-2 bg-white p-2 rounded shadow flex space-x-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        className: \"flex flex-col items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"Detail\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                                lineNumber: 174,\n                                columnNumber: 21\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                min: \"5\",\n                                max: \"50\",\n                                value: detail,\n                                onChange: (e)=>setDetail(Number(e.target.value))\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                                lineNumber: 175,\n                                columnNumber: 21\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                        lineNumber: 173,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                        className: \"flex flex-col items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                children: \"Trim\"\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                                lineNumber: 184,\n                                columnNumber: 21\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                type: \"range\",\n                                min: \"0\",\n                                max: densityData.length > 0 ? Math.max(1, Math.floor(d3.max(densityData, (d)=>d[0]) - d3.min(densityData, (d)=>d[0]))) : 1,\n                                step: \"1\",\n                                value: trim,\n                                onChange: (e)=>setTrim(Math.min(Number(e.target.value), Math.floor(d3.max(densityData, (d)=>d[0]) - d3.min(densityData, (d)=>d[0]))))\n                            }, void 0, false, {\n                                fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                                lineNumber: 185,\n                                columnNumber: 21\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                        lineNumber: 183,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n                lineNumber: 172,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"E:\\\\Wpi\\\\Regularly\\\\Courses\\\\Sr\\\\2024_C_Term\\\\CS4241\\\\HW\\\\final-project-kermit-the-frog\\\\src\\\\app\\\\dataVis\\\\SolveDen.js\",\n        lineNumber: 168,\n        columnNumber: 9\n    }, this);\n}\n_s(SolveDensity, \"1uNbZk50LzmMRxT9VL1dHAsEZcE=\");\n_c = SolveDensity;\nvar _c;\n$RefreshReg$(_c, \"SolveDensity\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports signature on update so we can compare the boundary\r\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\r\n                module.hot.dispose(function (data) {\r\n                    data.prevSignature =\r\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevSignature !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevSignature !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/dataVis/SolveDen.js\n"));

/***/ })

});